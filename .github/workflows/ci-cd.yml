name: Desplegar y Probar Aplicaci贸n e-Commerce

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy-int:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Comando de Build
        run: npm run build

      - name: Comando de Inicio
        run: npm start 

      - name: Desplegar en Render (Integraci贸n)
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_INT_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            --data '{"serviceId": "$RENDER_SERVICE_ID", "clearCache": false}' \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys

  test-int:
    runs-on: ubuntu-latest
    needs: build-and-deploy-int

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Esperar a que termine el despliegue
        run: sleep 300

      - name: Ejecutar pruebas Cypress
        run: npm run test
        env:
          CYPRESS_BASE_URL: ${{ secrets.CYPRESS_INT_BASE_URL }}

  build-and-deploy-pro:
    runs-on: ubuntu-latest
    needs: test-int 

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependencias
        run: npm install

      - name: Construir la aplicaci贸n
        run: npm run build

      - name: Desplegar en Render (Producci贸n)
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_PRO_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            --data '{"serviceId": "$RENDER_SERVICE_ID", "clearCache": false}' \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys

  test-pro:
    runs-on: ubuntu-latest
    needs: build-and-deploy-pro

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependencias
        run: npm install

      - name: Esperar a que termine el despliegue
        run: sleep 120

      - name: Instalar Cypress
        run: npm install cypress

      - name: Ejecutar pruebas Cypress
        run: npx cypress run
        env:
          CYPRESS_BASE_URL: ${{ secrets.CYPRESS_PRO_BASE_URL }}

 test-pro:
    runs-on: ubuntu-latest
    needs: build-and-deploy-pro

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Esperar a que termine el despliegue
        run: sleep 300

      - name: Ejecutar pruebas Cypress
        run: npm run test
        env:
          CYPRESS_BASE_URL: ${{ secrets.CYPRESS_INT_BASE_URL }}